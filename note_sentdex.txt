print
	print('Hi '+str(5))
while loop
	condition = 1
	while condition < 10:
	    	print (condition)
    		condition += 1
for loop
	for x in range(1,11):
   		print(x)
if
	x = 5
	y = 8
	z = 5
	a = 3
	if z < y > x > a:
  		print('y is greater than z and greater than x and a')
if else
	x = 5
	y = 8
	if x > y:
 		print('x > y')
	else:
  		print('x < y')
if elsif else
	x = 5
	y = 10
	z = 22

	if x > y:
  		print('x > y')
	elif x < z:
		print('x < z')
	elif 5 > 2:
		print('this is true')
	else:
  		print('no if elif run')
function
	def example():
 		print('basic function')
		z = 3+9
		print(z)
	example()
function parameter
	def simple_sub(num1,num2):
		answer = num1 - num2
		print(num1,'-',num2,'=',answer)
	simple_sub(3,5)
	simple_sub(num1=5,num2=3)
function parameter default
	def simple(num1,num2=5):
		print(num1,num2)
	simple(3)
global, local variable
	x = 6
	y = 11
	def example():
		z = 5
		print('z=',z)
		global x
		x += 1
		print('x=',x)
	example()
file write
	text = 'Sample Text to Save\nNew line!'
	saveFile = open('exampleFile.txt','w')
	saveFile.write(text)
	saveFile.close()
file append
	appendMe = '\nNew bit of information'
	saveFile = open('exampleFile.txt','a')
	saveFile.write(appendMe)
	saveFile.close()
file read
	saveFile = open('exampleFile.txt','r')
	rd = saveFile.readlines()
	saveFile.close()
	print(rd)
class
	class calculator:
		def add(x,y):
			result = x+y
			print(result)
		def sub(x,y):
			result = x-y
			print(result)
		def mult(x,y):
			result = x*y
			print(result)
		def div(x,y):
			result = x/y
			print(result)
	calculator.mult(3,5)
	calculator.sub(5,13)
	calculator.div(1,3)
user input
	x = input ('What is your name? ')
module
	install
		http://www.lfd.uci.edu/~gohlke/pythonlibs/
		pip install ...
	import
		import statistics as s
		from statistics import median, stdev as d, variance as v
	create
		module is a python script with functions defined
		module file must be in Lib Lib/site-packages or path defined folder, else import don't work
		use if __name__ == '__main__' for excluding code when used as module
List & Tuples
	List : array that can be manupilated
	Tuple : array that is immutable, can't be changed, handle data fast
		x = (1,2,3), tuple
		y = [4,5,6], list
		y[0] -> 4
		x[2] -> 3 